<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwill.fourmen.repository.CommentDao">

    <!-- 특정 포스트에 달려 있는 모든 댓글 검색. -->
    <select id = "selectByWorksId" resultType = "Comments">
    	select * from WORKS_COMMENTS where WORKSID = #{worksid} order by COMMENT_ID
    </select>
    
    <select id = "getMaxGroupNum" resultType = "long">
    	select max(c_group) from WORKS_COMMENTS where WORKSID = #{worksid}
    </select>
    
    <select id = "getMaxGroupDepth" resultType = "long">
    	select max(c_group_depth) from WORKS_COMMENTS where C_GROUP_LEVEL = #{c_group_level}
    </select>
    
    <!-- 모달창에서 댓글 수정을 위한 특정 댓글 한개만 SELECT -->
    <select id = "getComment" resultType = "Comments">
    	select * from WORKS_COMMENTS where COMMENT_ID = #{comment_id}
    </select>
    
    <insert id = "registerComment">
    	insert into WORKS_COMMENTS (WORKSID, COMMENT_WRITER, COMMENT_CONTENT, C_GROUP, C_GROUP_LEVEL, C_GROUP_DEPTH, PARENT_COMMENT_ID, ACC_COMMENT) values (#{worksid}, #{comment_writer}, #{comment_content}, #{c_group}, #{c_group_level}, #{c_group_depth}, #{parent_comment_id}, #{acc_comment})
    </insert>
    
    <!-- 선택된 댓글 한가지만 삭제 -->
    <delete id = "deleteCommentByCommentId">
    	delete from WORKS_COMMENTS where COMMENT_ID = #{comment_id}
    </delete>
    
    <!-- 작품 or 게시글이 삭제된다면 달려있는 댓글 모두 삭제 -->
    <delete id="deleteAllCommentsByWorksId">
    	delete from WORKS_COMMENTS where WORKSID = #{worksid}
    </delete>
    
    <update id ="updateParentCommentContentSetNull">
    	update WORKS_COMMENTS set COMMENT_CONTENT = '삭제된 댓글입니다.' where COMMENT_ID = #{comment_id}
    </update>
    
    <update id = "increaseAccAnswer">
    	update WORKS_COMMENTS set ACC_COMMENT = ACC_COMMENT + 1 where COMMENT_ID = #{parent_comment_id}
    </update>
    
    <update id ="decreaseAccAnswer">
    	update WORKS_COMMENTS set ACC_COMMENT = ACC_COMMENT - 1 where COMMENT_ID = #{parent_comment_id}
    </update>
    
    <update id = "updateComment">
    	update WORKS_COMMENTS set COMMENT_CONTENT = #{comment_content}, MODIFIED_TIME = systimestamp where COMMENT_ID = #{comment_id}
    </update>
    
</mapper>